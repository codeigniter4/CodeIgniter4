Version 4.3.0
#############

Release Date: Unreleased

**4.3.0 release of CodeIgniter4**

.. contents::
    :local:
    :depth: 2

BREAKING
********

Behavior Changes
================

.. _exceptions-when-database-errors-occur:

Exceptions when Database Errors Occur
-------------------------------------

- The exceptions thrown by the database connection classes have been changed to ``CodeIgniter\Database\Exceptions\DatabaseException``. Previously, different database drivers threw different exception classes, but these have been unified into ``DatabaseException``.
- The exceptions thrown by the ``execute()`` method of Prepared Queries have been changed to ``DatabaseException``. Previously, different database drivers might throw different exception classes or did not throw exceptions, but these have been unified into ``DatabaseException``.

HTTP Status Code and Exit Code when Exception Occurs
----------------------------------------------------

Previously, CodeIgniter's Exception Handler used the *Exception code* as the *HTTP status code* in some cases, and calculated the *Exit code* based on the Exception code. However there should be no logical connection with Exception code and HTTP Status Code or Exit code.

- Now the Exception Handler sets HTTP status code to ``500`` and set Exit code to the constant ``EXIT_ERROR`` (= ``1``) by default.
- You can change HTTP status code or Exit code to implement ``HTTPExceptionInterface`` or ``HasExitCodeInterface`` in your Exception class. See :ref:`error-specify-http-status-code` and :ref:`error-specify-exit-code`.

For example, the Exit code has been changed like the following:

- If an uncaught ``ConfigException`` occurs, the Exit code is ``EXIT_CONFIG`` (= ``3``) instead of ``12``.
- If an uncaught ``CastException`` occurs, the Exit code is ``EXIT_CONFIG`` (= ``3``) instead of ``9``.
- If an uncaught ``DatabaseException`` occurs, the Exit code is ``EXIT_DATABASE`` (= ``8``) instead of ``17``.

Others
------

- The ``spark`` file has been changed due to a change in the processing of Spark commands.
- ``InvalidArgumentException`` that is a kind of ``LogicException`` in ``BaseBuilder::_whereIn()`` is not suppressed by the configuration. Previously if ``CI_DEBUG`` was false, the exception was suppressed.
- ``RouteCollection::resetRoutes()`` resets Auto-Discovery of Routes. Previously once discovered, RouteCollection never discover Routes files again even if ``RouteCollection::resetRoutes()`` is called.
- ``CITestStreamFilter::$buffer = ''`` no longer causes the filter to be registered to listen for streams. Now there
  is a ``CITestStreamFilter::registration()`` method for this. See :ref:`upgrade-430-stream-filter` for details.
- The data structure returned by :ref:`BaseConnection::getForeignKeyData() <metadata-getforeignkeydata>` has been changed.

.. _v430-interface-changes:

Interface Changes
=================

- Added missing ``getBody()``, ``hasHeader()`` and ``getHeaderLine()`` method in ``MessageInterface``.
- Now ``ResponseInterface`` extends ``MessageInterface``.

Method Signature Changes
========================

.. _v430-validation-changes:

Validation Changes
------------------

ValidationInterface
^^^^^^^^^^^^^^^^^^^

``ValidationInterface`` has been changed to eliminate the mismatch between ``ValidationInterface`` and the ``Validation`` class.

- The third parameter ``$dbGroup`` for ``ValidationInterface::run()`` has been added.
- The following methods are added to the interface:
    - ``ValidationInterface::setRule()``
    - ``ValidationInterface::getRules()``
    - ``ValidationInterface::getRuleGroup()``
    - ``ValidationInterface::setRuleGroup()``
    - ``ValidationInterface::loadRuleGroup()``
    - ``ValidationInterface::hasError()``
    - ``ValidationInterface::listErrors()``
    - ``ValidationInterface::showError()``

Validation
^^^^^^^^^^

The return value of  ``Validation::loadRuleGroup()`` has been changed ``null`` to ``[]`` when the ``$group`` is empty.

Others
------

- The return type of ``CodeIgniter\Database\Database::loadForge()`` has been changed to ``Forge``.
- The return type of ``CodeIgniter\Database\Database::loadUtils()`` has been changed to ``BaseUtils``.
- Parameter ``$column`` has changed in ``Table::dropForeignKey()`` to ``$foreignName``.
- The second parameter ``$index`` of ``BaseBuilder::updateBatch()`` has changed to ``$constraints``. It now accepts types array, string, or ``RawSql``. Extending classes should likewise change types.
- The ``$set`` parameter of ``BaseBuilder::insertBatch()`` and ``BaseBuilder::updateBatch()`` now accepts an object of a single row of data.
- ``BaseBuilder::_updateBatch()``
    - The second parameter ``$values`` has changed to ``$keys``.
    - The third parameter ``$index`` has changed to ``$values``. The parameter type also has changed to ``array``.

Enhancements
************

Commands
========

- The call handler for Spark commands from the ``CodeIgniter\CodeIgniter`` class has been extracted. This will reduce the cost of console calls.
- Added ``spark filter:check`` command to check the filters for a route. See :ref:`Controller Filters <spark-filter-check>` for the details.
- Now ``spark routes`` command shows route names. See :ref:`URI Routing <routing-spark-routes>`.
- Help information for a spark command can now be accessed using the ``--help`` option (e.g. ``php spark serve --help``)
- Added methods ``CLI::promptByMultipleKeys()`` to support multiple value in input, unlike ``promptByKey()``. See :ref:`prompt-by-multiple-keys` for details.

Testing
=======

- Added the ``StreamFilterTrait`` to make it easier to work with capturing data from STDOUT and STDERR streams. See :ref:`testing-cli-output`.
- The CITestStreamFilter filter class now implements methods for adding a filter to streams. See :ref:`testing-cli-output`.
- Added the ``PhpStreamWrapper`` to make it easier to work with setting data to ``php://stdin``. See :ref:`testing-cli-input`.
- Added method :ref:`benchmark-timer-record` to measure performance in a callable. Also enhanced common function ``timer()`` to accept optional callable.

Database
========

- SQLite :ref:`BaseConnection::getIndexData() <db-metadata-getindexdata>` now can return pseudo index named ``PRIMARY`` for `AUTOINCREMENT` column, and each returned index data has ``type`` property.
- SQLSRV now automatically drops ``DEFAULT`` constraint when using :ref:`Forge::dropColumn() <db-forge-dropColumn>`.
- ``BaseConnection::escape()`` now excludes the ``RawSql`` data type. This allows passing SQL strings into data.
- The new method ``Forge::dropPrimaryKey()`` allows dropping the primary key on a table. See :ref:`dropping-a-primary-key`.
- Improved the SQL structure for ``Builder::updateBatch()``. See :ref:`update-batch` for the details.
- Improved data returned by :ref:`BaseConnection::getForeignKeyData() <metadata-getforeignkeydata>`. All DBMS returns the same structure.
- :php:meth:`CodeIgniter\\Database\\Forge::addForeignKey()` now includes a name parameter to manual set foreign key names. Not supported in SQLite3.
- Added ``when()`` and ``whenNot()`` methods to conditionally add clauses to the query. See :ref:`BaseBuilder::when() <db-builder-when>` for details.

Model
=====

- Added before and after events to ``BaseModel::insertBatch()`` and ``BaseModel::updateBatch()`` methods. See :ref:`model-events-callbacks`.
- Added ``Model::allowEmptyInserts()`` method to insert empty data. See :ref:`Using CodeIgniter's Model <model-allow-empty-inserts>`
- Added new :ref:`entities-property-casting` class ``IntBoolCast`` for Entity.

Libraries
=========

- Added methods ``replace()``, ``addLineAfter()`` and ``addLineBefore()`` to modify files in Publisher. See :ref:`Publisher <publisher-modifying-files>` for details.
- Now **Encryption** can decrypt data encrypted with CI3's Encryption. See :ref:`encryption-compatible-with-ci3`.

Helpers and Functions
=====================

- Now you can autoload helpers by **app/Config/Autoload.php**.
- Added new Form helper function :php:func:`validation_errors()`, :php:func:`validation_list_errors()` and :php:func:`validation_show_error()` to display Validation Errors.
- You can set the locale to :php:func:`route_to()` if you pass a locale value as the last parameter.
- Added :php:func:`request()` and :php:func:`response()` functions.
- Add :php:func:`decamelize()` function to convert camelCase to snake_case.

Others
======

- Added ``$routes->useSupportedLocalesOnly(true)`` so that the Router returns 404 Not Found if the locale in the URL is not supported in ``Config\App::$supportedLocales``. See :ref:`Localization <localization-in-routes>`
- Now you can specify Composer packages to auto-discover manually. See :ref:`Code Modules <modules-specify-composer-packages>`.
- Added new ``$routes->view()`` method to return a the view directly. See :ref:`View Routes <view-routes>`.
- View Cells are now first-class citizens and can located in the **app/Cells** directory. See :ref:`View Cells <view-cells-app-cells>`.

Changes
*******

- DBDebug
    - To be consistent in behavior regardless of environments, ``Config\Database::$default['DBDebug']`` and ``Config\Database::$tests['DBDebug']`` has been changed to ``true`` by default. With these settings, an exception is always thrown when a database error occurs.
    - Now ``DatabaseException`` thrown in ``BaseBuilder`` is thrown if ``$DBDebug`` is true. Previously, it is thrown if ``CI_DEBUG`` is true.
    - The default value of ``BaseConnection::$DBDebug`` has been changed to ``true``.
    - With these changes, ``DBDebug`` now means whether or not to throw an exception when an error occurs. Although unrelated to debugging, the name has not been changed.
- Changed the processing of Spark commands:
    - The ``CodeIgniter\CodeIgniter`` no longer handles Spark commands.
    - The ``CodeIgniter::isSparked()`` method has been removed.
    - The ``CodeIgniter\CLI\CommandRunner`` class has been removed due to a change in Spark commands processing.
    - The system route configuration file ``system/Config/Routes.php`` has been removed.
    - The route configuration file ``app/Config/Routes.php`` has been changed. Removed include of system routes configuration file.
- Config
    - All atomic type properties in ``Config`` classes have been typed.
    - Changed the default setting to not redirect when a CSRF check fails so that it is easy to see that it is a CSRF error.
- Updated English language strings to be more consistent.

Deprecations
************

- ``RouteCollection::localizeRoute()`` is deprecated.
- ``RouteCollection::fillRouteParams()`` is deprecated. Use ``RouteCollection::buildReverseRoute()`` instead.
- ``BaseBuilder::setUpdateBatch()`` and ``BaseBuilder::setInsertBatch()`` are deprecated. Use ``BaseBuilder::setData()`` instead.

Bugs Fixed
**********

none.
